{"version":3,"sources":["components/CountryDetails/CountryDetails.js","components/Header/Header.js","components/Country/Country.js","components/Home/Home.js","pageNotFound.jpg","components/NotFound/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["CountryDetails","countryName","useParams","useState","country","setCountry","useEffect","fetch","then","res","json","data","flag","name","capital","nativeName","area","population","region","subregion","demonym","alpha2Code","alpha3Code","callingCodes","numericCode","className","style","maxWidth","margin","src","alt","to","type","Header","Country","props","history","useHistory","height","onClick","push","Home","countries","setCountries","map","NotFound","textAlign","marginTop","pageNotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd14abed.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CountryDetails = () => {\r\n    const { countryName } = useParams();\r\n\r\n    const [country, setCountry] = useState({});\r\n    useEffect(() => {\r\n        fetch(`https://restcountries.eu/rest/v2/name/${countryName}`)\r\n            .then(res => res.json())\r\n            .then(data => setCountry(data[0]))\r\n    }, [countryName]);\r\n\r\n    const { flag, name, capital, nativeName, area, population, region, subregion, demonym, alpha2Code, alpha3Code, callingCodes, numericCode } = country;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card my-4 shadow\" style={{ maxWidth: \"540px\", margin: \"auto\" }}>\r\n                <img src={flag} className=\"card-img-top\" alt=\"...\" />\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title text-center\">{name}</h3>\r\n                    <table className=\"table table-sm table-borderless\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Native Name:</td>\r\n                                <td>{nativeName}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Capital:</td>\r\n                                <td>{capital || 'hello'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Area:</td>\r\n                                <td>{area}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Population:</td>\r\n                                <td>{population}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Region:</td>\r\n                                <td>{region}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Sub Region:</td>\r\n                                <td>{subregion}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Demonym:</td>\r\n                                <td>{demonym}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Alpha-2 & Alpha-3 Code:</td>\r\n                                <td>{alpha2Code} & {alpha3Code}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Country Code:</td>\r\n                                <td>{callingCodes}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Numeric Code:</td>\r\n                                <td>{numericCode}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <Link to=\"/home\">\r\n                    <button type=\"button\" className=\"btn btn-danger px-4 py-2\">Back</button>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CountryDetails;","import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className=\"navbar header\">\r\n            <div className=\"container-fluid\">\r\n                <h1 className=\"navbar-brand\">All Countries Information</h1>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport './Country.css';\r\n\r\nconst Country = (props) => {\r\n    const history = useHistory();\r\n    const { name, capital, area, population, region, flag } = props.country;\r\n\r\n    const handleClick = countryName => {\r\n        history.push(`/country/${countryName}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"col my-3\">\r\n            <div className=\"card shadow\">\r\n                <div className=\"p-1\" style={{height: \"130px\"}}>\r\n                  <img src={flag} className=\"card-img-top h-100\" alt=\"...\" />\r\n                </div>\r\n                <div className=\"card-body p-2\">\r\n                    <h5 className=\"card-title text-center\">{name}</h5>\r\n                    <table className=\"table table-sm table-borderless\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Capital:</td>\r\n                                <td>{capital}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Area:</td>\r\n                                <td>{area}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Population:</td>\r\n                                <td>{population}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Region:</td>\r\n                                <td>{region}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"text-center\">\r\n                        <button onClick={() => handleClick(name)} type=\"button\" className=\"btn btn-danger\">Get details</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Country;","import React, { useEffect, useState } from 'react';\r\nimport Country from '../Country/Country';\r\n\r\nconst Home = () => {\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://restcountries.eu/rest/v2/all')\r\n            .then(res => res.json())\r\n            .then(data => setCountries(data))\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row row-cols-xxl-6 row-cols-xl-5 row-cols-lg-4 row-cols-md-3 row-cols-sm-2 row-cols-2 g-4\">\r\n                {\r\n                    countries.map(country => <Country key={country.numericCode} country={country} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/pageNotFound.8152c74f.jpg\";","import React from 'react';\r\nimport pageNotFound from '../../pageNotFound.jpg';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div style={{textAlign: \"center\", marginTop: \"50px\"}}>\r\n            <img src={pageNotFound} alt=\"\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import {\n  BrowserRouter as Router,\n\n  Route, Switch\n} from \"react-router-dom\";\nimport CountryDetails from \"./components/CountryDetails/CountryDetails\";\nimport Header from \"./components/Header/Header\";\nimport Home from \"./components/Home/Home\";\nimport NotFound from \"./components/NotFound/NotFound\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/home\">\n          <Home />\n        </Route>\n        <Route path=\"/country/:countryName\">\n          <CountryDetails />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}